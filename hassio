#!/usr/bin/env python3

import argparse
import devices.objects as dev
import exceptions.exceptions as exceptions
import devices.api as api
import yaml

config_path = "config.yaml"
# config_path = "/etc/hassio/config.yaml"

parser = argparse.ArgumentParser()
parser.add_argument("action", help="the action to perform on the device")
parser.add_argument("device", help="the device you need to modify")
parser.add_argument("-c", "--config", help="the path to the config file")
args = parser.parse_args()

if __name__ == "__main__":
    with open(config_path, "r") as config_file:
        config = yaml.safe_load(config_file)

    try:
        api_iface = api.API_interface(url=config["url"], token=config["token"])
    except KeyError:
        raise exceptions.URLTokenNotPresent()

    if args.device in config["objects"].keys():
        id = config["objects"][args.device]["id"]
        type = config["objects"][args.device]["type"]
        device = dev.parse_object(object_type=type, id=id, api_iface=api_iface)
    else:
        raise exceptions.DeviceNotExists(args.device)

    response = device[args.action]
    print(response)
